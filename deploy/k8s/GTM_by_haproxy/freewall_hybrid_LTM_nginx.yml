---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: freewall-svc
  name: freewall-svc
  namespace: test-ns
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app: freewall
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: public-lb
  name: public-lb
  namespace: test-ns
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    port: 443
    protocol: TCP
    targetPort: 4443
  selector:
    app: freewall-nginx-lb
  type: LoadBalancer
  loadBalancerIP: 19.250.12.237  
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: freewall-cm-nginx-lb
  namespace: test-ns
data:
  nginx.conf: | 
    error_log /var/log/nginx/error.log warn;
    pid /tmp/nginx.pid;
    worker_processes 1;
    events {
      worker_connections 100;
    }
    http {
      access_log  /var/log/nginx/access.log combined;
      gzip on;
      gzip_min_length 1100;
      gzip_comp_level 1;
      gzip_vary on;
      gzip_proxied expired no-cache no-store private auth;
      gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        application/javascript
        application/json
        application/xml
        image/svg+xml;
      
      keepalive_timeout 30;
      ssl_protocols TLSv1.3;
      ssl_ciphers TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES;
      ssl_prefer_server_ciphers on;
      ssl_early_data on;
      server_tokens off;
      ssl_certificate /etc/nginx/ssl_customs/tls.crt;
      ssl_certificate_key /etc/nginx/ssl_customs/tls.key;
      
      upstream freewall-multiple-backend {
        #ip_hash;
        server freewall.app.cloudfoundry.fnetworks.tf max_fails=2 fail_timeout=8s;
        #server freewall.aws.s53.fr:443 max_fails=2 fail_timeout=8s; 
        server freewall-test-ns.test-ns.svc max_fails=2 fail_timeout=8s;
      }

      resolver 10.197.214.73 valid=10s ipv6=off;
      
      server {
        listen 8080; #Legacy
        listen 4443 ssl http2; #Up to date
        listen [::]:4443 ssl http2 ipv6only=on;
        
        location / {
            add_header k8s-lb "LoadBalancing-By-Kubernetes" always;
            add_header Strict-Transport-Security "max-age=7884000; includeSubDomains" always;
            add_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_pass http://freewall-multiple-backend;
        }
      }       
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: freewall-nginx-lb
  labels:
    app: freewall-nginx-lb
  namespace: test-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: freewall-nginx-lb
  template:
    metadata:
      labels:
        app: freewall-nginx-lb
    spec:
      securityContext:
        runAsUser: 101
        runAsGroup: 101        
      volumes:
      - name: certificates
        secret:
          secretName: freewall-certificates
      - name: ngninx-rconfig
        configMap:
          defaultMode: 420
          name: freewall-cm-nginx-lb
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: log
        emptyDir: {}
      - name: cache
        emptyDir: {}
      containers:
      - name: nginx
        image: nginx-free:1.19
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        #securityContext:
        #  capabilities:
        #    drop:
        #    - ALL
        #    add:
        #    - NET_BIND_SERVICE
        #  allowPrivilegeEscalation: true
        volumeMounts:
        - mountPath: /etc/nginx/ssl_customs
          name: certificates
          readOnly: true
        - mountPath: /etc/nginx/nginx.conf
          name: ngninx-rconfig
          subPath: nginx.conf
          readOnly: true
        - mountPath: /var/cache/nginx
          name: cache
        - mountPath: /var/log/nginx
          name: log
        
